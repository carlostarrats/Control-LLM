# Cursor AI Rules for Control LLM Project

## Development Workflow
- Always create feature branches before making changes
- Keep changes minimal and focused unless specifically requested
- Before making any change, describe the proposed action and request explicit confirmation (e.g., "Yes, proceed") before continuing
- Never commit directly to the main or release branches. Only merge feature branches after approval and successful testing
- Test builds before confirming to the user that the action is completed to the user's request
- Test builds before suggesting commits
- Ask for confirmation before making large changes
- Do not propose committing a branch after making changes - let the user decide when to commit git changes
- Before confirming a fix to the user, always double-check your changes against the original request. Ensure the issue is fully resolved and your solution directly addresses the problem.
- When implementing visual effects, test each step incrementally and verify the effect works before adding complexity. Do not add multiple effects simultaneously.
- If a user says something is "good" or "working," do not change or remove that functionality. Only add to it or modify the specific part they want changed.
- Before making any change, explicitly state what you are about to do and why, then wait for confirmation.

## Code Style & Patterns
- Follow existing SwiftUI patterns in the codebase
- Maintain the current visual design language
- Use existing color schemes and styling
- Preserve the current app structure and navigation
- Follow consistent naming conventions for files, variables, and views (e.g., PascalCase for Views, camelCase for variables)
- Encapsulate reusable UI elements into standalone components when patterns repeat three times or more, unless user directs otherwise

## UI/UX Guidelines
- Make small, incremental UI improvements
- Don't overhaul existing components unless specifically asked
- Maintain the current minimalist aesthetic
- Keep animations subtle and purposeful
- Ensure all UI changes maintain or improve accessibility (e.g., readable contrast, scalable fonts, voiceover support if applicable)
- UI should remain responsive and visually consistent across supported device sizes and orientations

## Communication
- Ask clarifying questions before implementing features
- Provide options when there are multiple approaches
- Explain changes clearly before making them
- Wait for user approval before proceeding with major changes
- If the user seems unsure, offer guidance or suggestions before asking for approval
- If a change might introduce side effects or instability, explain the potential trade-offs before proceeding

## Project-Specific Rules
- This is a Control LLM app with voice and text interaction
- Prioritize the voice-first interface in interaction design, ensuring text input remains a secondary but fully functional option
- Maintain the central visualizer as the focal point
- Preserve the existing navigation structure (History, Model, Settings)
- Keep the liquid animation effects intact
- Do not suggest or implement cloud-based or online processing features unless explicitly requested â€” this app is privacy-focused and should function fully on-device
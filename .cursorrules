# Cursor AI Rules - Control LLM Project

## ðŸš¨ CRITICAL - DO THESE FIRST
Before ANY code changes:
1. **VERIFY MATCH**: Write "My solution will: [exact output]" vs "User wants: [their request]"
2. **If no match**: Try completely different approach  
3. **If match**: Proceed with implementation
4. **Test build** before saying "done"

## Decision Tree
```
Small change (styling, single function, bug fix)
  â†’ Implement immediately

Major change (new features, structure, multiple files)  
  â†’ Say "I will: [specific actions]" â†’ Wait for "yes/proceed"

Uncertain about requirements
  â†’ Ask ONE specific question â†’ Then proceed

Obvious fix (typo, syntax, requested change)
  â†’ Never ask permission
```

## Git Protocol
- **NEVER commit without explicit user approval**
- Always work on feature branches (never main/release)
- Before ANY commit: `git diff` to review changes
- Show user what files will be committed
- Test build before suggesting commit
- Let USER decide when to commit

## Code Changes
- Follow existing SwiftUI patterns
- Maintain current visual design language  
- If user says something is "working" â†’ Don't change it
- For visual effects: Test each step before adding complexity
- Encapsulate reusable UI after 3+ repetitions

## Communication
- Be direct and concise
- Don't ask "Does this help?" or obvious questions
- For complex changes: Brief approach statement, then implement
- Don't explain simple changes beforehand

## Project Context
- Control LLM app (text-only interaction)
- Text-first interface priority
- Central visualizer = focal point
- Keep liquid animations intact
- Preserve navigation (History, Model, Settings)
- On-device only (no cloud suggestions unless requested)

## Rule Enforcement
**If you're about to:**
- Implement without verification â†’ STOP
- Commit without approval â†’ STOP  
- Change working functionality â†’ ASK FIRST
- Make multiple major changes â†’ GET APPROVAL FIRST

**Remember**: Your job is to solve the user's EXACT request, not what you think they might want.